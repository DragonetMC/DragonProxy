/*
 * This file was automatically generated by sel-utils and
 * released under the GNU General Public License version 3.
 *
 * License: https://github.com/sel-project/sel-utils/blob/master/LICENSE
 * Repository: https://github.com/sel-project/sel-utils
 * Generated from https://github.com/sel-project/sel-utils/blob/master/xml/protocol/pocket100.xml
 */
package sul.protocol.pocket100.play;

import sul.utils.*;

public class MobArmorEquipment extends Packet {

	public static final byte ID = (byte)33;

	public static final boolean CLIENTBOUND = true;
	public static final boolean SERVERBOUND = true;

	public long entityId;
	public sul.protocol.pocket100.types.Slot[] armor = new sul.protocol.pocket100.types.Slot[4];

	public MobArmorEquipment() {}

	public MobArmorEquipment(long entityId, sul.protocol.pocket100.types.Slot[] armor) {
		this.entityId = entityId;
		this.armor = armor;
	}

	@Override
	public int length() {
		int length=Buffer.varlongLength(entityId) + 1; for(sul.protocol.pocket100.types.Slot yxjtb3i:armor){ length+=yxjtb3i.length(); } return length;
	}

	@Override
	public byte[] encode() {
		this._buffer = new byte[this.length()];
		this.writeBigEndianByte(ID);
		this.writeVarlong(entityId);
		for(sul.protocol.pocket100.types.Slot yxjtb3i:armor){ this.writeBytes(yxjtb3i.encode()); }
		return this._buffer;
	}

	@Override
	public void decode(byte[] buffer) {
		this._buffer = buffer;
		readBigEndianByte();
		entityId=this.readVarlong();
		final int bgfybw9y=4; armor=new sul.protocol.pocket100.types.Slot[bgfybw9y]; for(int yxjtb3i=0;yxjtb3i<armor.length;yxjtb3i++){ armor[yxjtb3i]=new sul.protocol.pocket100.types.Slot(); armor[yxjtb3i]._index=this._index; armor[yxjtb3i].decode(this._buffer); this._index=armor[yxjtb3i]._index; }
	}

	public static MobArmorEquipment fromBuffer(byte[] buffer) {
		MobArmorEquipment ret = new MobArmorEquipment();
		ret.decode(buffer);
		return ret;
	}

}
