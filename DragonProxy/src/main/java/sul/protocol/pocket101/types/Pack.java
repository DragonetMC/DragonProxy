/*
 * This file was automatically generated by sel-utils and
 * released under the GNU General Public License version 3.
 *
 * License: https://github.com/sel-project/sel-utils/blob/master/LICENSE
 * Repository: https://github.com/sel-project/sel-utils
 * Generated from https://github.com/sel-project/sel-utils/blob/master/xml/protocol/pocket101.xml
 */
package sul.protocol.pocket101.types;

import java.nio.charset.StandardCharsets;

import sul.utils.*;

public class Pack extends Packet {

	public String id;
	public String version;
	public long size;

	public Pack() {}

	public Pack(String id, String version, long size) {
		this.id = id;
		this.version = version;
		this.size = size;
	}

	@Override
	public int length() {
		return Buffer.varuintLength(id.getBytes(StandardCharsets.UTF_8).length) + id.getBytes(StandardCharsets.UTF_8).length + Buffer.varuintLength(version.getBytes(StandardCharsets.UTF_8).length) + version.getBytes(StandardCharsets.UTF_8).length + 8;
	}

	@Override
	public byte[] encode() {
		this._buffer = new byte[this.length()];
		byte[] awq=id.getBytes(StandardCharsets.UTF_8); this.writeVaruint((int)awq.length); this.writeBytes(awq);
		byte[] dmvyc2lvbg=version.getBytes(StandardCharsets.UTF_8); this.writeVaruint((int)dmvyc2lvbg.length); this.writeBytes(dmvyc2lvbg);
		this.writeBigEndianLong(size);
		return this.getBuffer();
	}

	@Override
	public void decode(byte[] buffer) {
		this._buffer = buffer;
		int bgvuawq=this.readVaruint(); id=new String(this.readBytes(bgvuawq), StandardCharsets.UTF_8);
		int bgvudmvyc2lvbg=this.readVaruint(); version=new String(this.readBytes(bgvudmvyc2lvbg), StandardCharsets.UTF_8);
		size=readBigEndianLong();
	}

	@Override
	public String toString() {
		return "Pack(id: " + this.id + ", version: " + this.version + ", size: " + this.size + ")";
	}


}
