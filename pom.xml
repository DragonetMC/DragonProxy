<?xml version="1.0" encoding="UTF-8"?>
<project xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xmlns="http://maven.apache.org/POM/4.0.0"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>org.dragonet.proxy</groupId>
    <artifactId>dragonproxy-parent</artifactId>
    <packaging>pom</packaging>
    <version>0.0.2-SNAPSHOT</version>
    <modules>
        <module>bootstrap</module>
        <module>proxy</module>
    </modules>

    <name>DragonProxy</name>
    <description>
        A proxy to allow Minecraft: Bedrock clients to connect to Minecraft: Java Edition servers.
    </description>
    <inceptionYear>2016</inceptionYear>
    <url>https://dragonet.org/</url>

    <organization>
        <name>DragonetMC</name>
        <url>https://github.com/DragonetMC/DragonProxy</url>
    </organization>

    <scm>
        <connection>scm:git:https://github.com/DragonetMC/DragonProxy.git</connection>
        <developerConnection>scm:git:git@github.com:DragonetMC/DragonProxy.git</developerConnection>
        <url>https://github.com/DragonetMC/DragonProxy</url>
    </scm>

    <ciManagement>
        <system>jenkins</system>
        <url>https://ci.codemc.io/job/DragonetMC/job/DragonProxy</url>
    </ciManagement>

    <issueManagement>
        <system>GitHub</system>
        <url>https://github.com/DragonetMC/DragonProxy/issues</url>
    </issueManagement>

    <distributionManagement>
        <snapshotRepository>
            <id>codemc-snapshots</id>
            <url>https://repo.codemc.io/repository/maven-snapshots/</url>
        </snapshotRepository>
        <repository>
            <id>codemc-releases</id>
            <url>https://repo.codemc.io/repository/maven-releases/</url>
        </repository>
    </distributionManagement>

    <licenses>
        <license>
            <name>The GNU General Public Licence version 3 (GPLv3)</name>
            <url>http://www.gnu.org/licenses/gpl-3.0.html</url>
            <distribution>repo</distribution>
        </license>
    </licenses>

    <properties>
        <!-- Environment properties -->
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
        <jdk.version>1.8</jdk.version>
        <jdk.release>8</jdk.release>

        <!-- Versioning properties -->
        <project.buildNumber>CUSTOM</project.buildNumber>
        <project.versionCode>${project.version}-b${project.buildNumber}</project.versionCode>
    </properties>

    <!-- Jenkins profile -->
    <profiles>
        <!-- Set the buildNumber using the jenkins env. variable -->
        <profile>
            <id>jenkins</id>
            <activation>
                <property>
                    <name>env.BUILD_NUMBER</name>
                </property>
            </activation>
            <properties>
                <project.buildNumber>${env.BUILD_NUMBER}</project.buildNumber>
            </properties>
        </profile>
    </profiles>

    <pluginRepositories>
        <pluginRepository>
            <id>oss.sonatype.org</id>
            <url>https://oss.sonatype.org/content/groups/staging</url>
        </pluginRepository>
    </pluginRepositories>

    <repositories>
        <repository>
            <id>codemc-repo</id>
            <url>https://repo.codemc.io/repository/maven-public</url>
        </repository>
        <repository>
            <id>nukkitx-repo</id>
            <url>https://repo.nukkitx.com/snapshot/</url>
        </repository>
    </repositories>

    <dependencies>
        <dependency>
            <groupId>org.projectlombok</groupId>
            <artifactId>lombok</artifactId>
            <version>1.18.10</version>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>com.google.code.findbugs</groupId>
            <artifactId>jsr305</artifactId>
            <version>3.0.2</version>
            <scope>provided</scope>
        </dependency>
    </dependencies>

    <build>
        <pluginManagement>
            <plugins>
                <!-- License header plugin -->
                <plugin>
                    <groupId>com.mycila</groupId>
                    <artifactId>license-maven-plugin</artifactId>
                    <version>3.0</version>
                    <configuration>
                        <header>licenseheader.txt</header>
                        <includes>
                            <include>src/main/java/**</include>
                        </includes>
                        <mapping>
                            <java>SLASHSTAR_STYLE</java>
                        </mapping>
                    </configuration>
                    <executions>
                        <execution>
                            <goals>
                                <goal>format</goal>
                            </goals>
                            <phase>process-sources</phase>
                        </execution>
                    </executions>
                </plugin>
                <!-- Clean the target folder content -->
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-clean-plugin</artifactId>
                    <version>3.1.0</version>
                </plugin>
                <!-- Include resource files -->
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-resources-plugin</artifactId>
                    <version>3.1.0</version>
                </plugin>
                <!-- Compile and include classes -->
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-compiler-plugin</artifactId>
                    <version>3.8.1</version>
                    <configuration>
                        <source>${jdk.version}</source>
                        <target>${jdk.version}</target>
                    </configuration>
                </plugin>
                <!-- Unit testing -->
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-surefire-plugin</artifactId>
                    <version>2.22.2</version>
                    <configuration>
                        <!-- Don't trim stack traces -->
                        <trimStackTrace>false</trimStackTrace>
                    </configuration>
                </plugin>
                <!-- Generate a jar containing classes and resources -->
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-jar-plugin</artifactId>
                    <version>3.1.2</version>
                </plugin>
                <!-- Generate a jar containing the source javadoc -->
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-javadoc-plugin</artifactId>
                    <version>3.1.1</version>
                    <configuration>
                        <quiet>true</quiet>
                        <source>${jdk.release}</source>
                    </configuration>
                    <executions>
                        <execution>
                            <id>attach-javadoc</id>
                            <goals>
                                <goal>jar</goal>
                            </goals>
                        </execution>
                    </executions>
                </plugin>
                <!-- Generate a jar containing the java sources -->
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-source-plugin</artifactId>
                    <version>3.0.1</version>
                    <executions>
                        <execution>
                            <id>attach-sources</id>
                            <goals>
                                <goal>jar</goal>
                            </goals>
                        </execution>
                    </executions>
                </plugin>
                <!-- Generate a jar containing classes, resources and shaded libraries -->
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-shade-plugin</artifactId>
                    <version>3.2.1</version>
                    <executions>
                        <execution>
                            <phase>package</phase>
                            <goals>
                                <goal>shade</goal>
                            </goals>
                        </execution>
                    </executions>
                    <configuration>
                        <filters>
                            <!-- Ignore manifest signatures for shading the project into an uber-jar to fix -->
                            <!-- "Invalid signature file digest for Manifest main attributes" -->
                            <filter>
                                <artifact>*:*</artifact>
                                <excludes>
                                    <exclude>META-INF/*.SF</exclude>
                                    <exclude>META-INF/*.DSA</exclude>
                                    <exclude>META-INF/*.RSA</exclude>
                                </excludes>
                            </filter>
                        </filters>
                    </configuration>
                </plugin>
                <!-- Install the jars as artifacts into the local repository -->
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-install-plugin</artifactId>
                    <version>2.5.2</version>
                </plugin>
                <!-- Deploy the jars as artifacts into the remote repository -->
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-deploy-plugin</artifactId>
                    <version>2.8.2</version>
                </plugin>
            </plugins>
        </pluginManagement>
    </build>
</project>
